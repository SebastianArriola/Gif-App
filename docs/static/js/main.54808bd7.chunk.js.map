{"version":3,"sources":["components/AddCategory.js","components/DelCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","DelCategory","onClick","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,0BAAMC,SAba,SAACC,GAEpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,OAQd,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAvBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAqB,IAApBd,EAAmB,EAAnBA,cAQzB,OACI,6BACI,4BAAQe,QARK,WAEjBf,GAAc,SAAAS,GAAI,MAAE,QAMhB,sB,uBCbCO,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,8DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAElB,MAAM,CAEFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXtB,kBAmBZM,GAnBY,4CAAH,sDCWLO,EATK,SAACL,GACjB,OACI,yBAAKM,UAAU,oDACX,2BAAIN,EAAIA,IAAIE,OACZ,yBAAKK,IAAKP,EAAIA,IAAIR,IAAKgB,IAAKR,EAAIA,IAAIE,UCFnCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0BhB,mBAAS,CAE/BuB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAjBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAACd,GAEHY,EAAS,CAEDf,KAAMG,EACNU,SAAS,SAO1B,CAACpB,IAEGqB,EDvBwBI,CAAazB,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QACpB,OAEI,oCAEA,wBAAIJ,UAAW,+CAA+ChB,GAC7DoB,GAAW,uBAAGJ,UAAU,oCAAb,eACZ,yBAAKA,UAAU,aAIHH,EAAOJ,KAAI,SAACC,GAAD,OAEP,kBAAC,EAAD,CAAagB,IAAMhB,EAAIC,GAAID,IAAOA,UEd7CiB,EAAe,WAExB,MAAoC3C,mBAAS,IAA7C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAQA,OACE,oCACC,8CACA,sCACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,4BAIK6C,EAAWnB,KAAK,SAAAT,GAAQ,OAEtB,kBAAC,EAAD,CACA0B,IAAO1B,EACPA,SAAYA,QAOnB,+B,YC7BP6B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.54808bd7.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n\r\n        setinputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleOnSubmit = (e) =>{\r\n\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n\r\n            setCategories(cats=> [inputValue, ...cats]);\r\n            setinputValue('');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleOnSubmit}>\r\n            <input \r\n            type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const DelCategory = ({setCategories}) => {\r\n\r\n    const handleDelete = () =>{\r\n\r\n        setCategories(cats=>[]);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleDelete}>Borrar historial</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nDelCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=8&api_key=UESUzwNt9EzvNnYTUPSBfiHF0Jd9ppPr`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n\r\n        return{\r\n\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n\r\n\r\n        }\r\n\r\n    })\r\n\r\n    //console.log(gifs);\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = (img) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__lightSpeedInLeft\">\r\n            <p>{img.img.title}</p>\r\n            <img src={img.img.url} alt={img.img.title}></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs} from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    return (\r\n\r\n        <>\r\n        \r\n        <h2 className= 'animate__animated animate__lightSpeedInLeft'>{category}</h2>\r\n        {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\r\n        <div className=\"card-grid\">        \r\n\r\n                {\r\n\r\n                    images.map((img) =>(\r\n\r\n                        <GifGridItem key= {img.id} img = {img}/>\r\n\r\n                    )\r\n                    )\r\n\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        \r\n        data: [],\r\n        loading: true\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n            .then((img)=>{\r\n                    \r\n                setstate({\r\n            \r\n                        data: img,\r\n                        loading: false\r\n                })\r\n\r\n            })\r\n\r\n        \r\n\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { DelCategory } from './components/DelCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    //const handleAdd = () =>{\r\n\r\n    //    setCategories(cats=> [...cats, 'HunterXHunter']);\r\n  \r\n    //}\r\n\r\n    return (\r\n      <>\r\n       <h1>Gif Expert App</h1>\r\n       <h2>Buscar</h2>\r\n       <DelCategory setCategories = {setCategories}/>\r\n       <AddCategory setCategories = {setCategories}/>\r\n       <ol>\r\n\r\n          {\r\n\r\n            categories.map( category => (\r\n\r\n              <GifGrid \r\n              key = {category}\r\n              category = {category}\r\n              />\r\n\r\n            ))\r\n          }\r\n\r\n       </ol>\r\n       <hr/> \r\n      </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\nimport 'animate.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}